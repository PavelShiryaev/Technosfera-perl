package DeepClone;

use 5.010;
use strict;
use warnings;
use DDP;

=encoding UTF8

=head1 SYNOPSIS

Клонирование сложных структур данных

=head1 clone($orig)

Функция принимает на вход ссылку на какую либо структуру данных и отдаюет, в качестве результата, ее точную независимую копию.
Это значит, что ни один элемент результирующей структуры, не может ссылаться на элементы исходной, но при этом она должна в точности повторять ее схему.

Входные данные:
* undef
* строка
* число
* ссылка на массив
* ссылка на хеш
Элементами ссылок на массив и хеш, могут быть любые из указанных выше конструкций.
Любые отличные от указанных типы данных -- недопустимы. В этом случае результатом клонирования должен быть undef.

Выходные данные:
* undef
* строка
* число
* ссылка на массив
* ссылка на хеш
Элементами ссылок на массив или хеш, не могут быть ссылки на массивы и хеши исходной структуры данных.

=cut

sub clone {
        my $orig = shift;
        my $h = shift;
        if (!(ref $h eq "HASH")) {
            my %hash;
            $h = \%hash;
        }
	my $cloned = "ERR";
        if (ref $orig eq 'ARRAY') {
            if ($$h{$orig}) {
                $cloned = $$h{$orig};
            } else {
                my @arr;
                $$h{$orig} = \@arr;
                for my $i(0..$#$orig) {
                    $arr[$i] = clone($$orig[$i], $h);
                }
                $cloned = \@arr;
            }   
        }
        if (ref $orig eq 'HASH') {
            if (exists $$h{$orig}) {
                $cloned = $$h{$orig};
            } else {
                my %hash;
                $$h{$orig} = \%hash;
                for my $key(keys %$orig) {
                    $hash{$key} = clone($$orig{$key}, $h);
                }
                $cloned = \%hash;
            }   
        }
        $cloned = $orig unless (ref $orig);
        return undef if ($@);
	eval {die "error_data" if ($cloned eq "ERR");};
        if ($@) {
            return undef;
        } else {
            return $cloned;
        }
}

1;
